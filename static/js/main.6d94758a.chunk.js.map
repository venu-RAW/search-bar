{"version":3,"sources":["components/SearchBar/SearchBar.module.scss","components/SearchBar/SearchBar.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","SearchBar","state","searchInput","handleChange","e","target","value","query","props","setState","searchResult","resultArray","searchData","searchKeys","forEach","key","filter","data","toLowerCase","includes","length","result","this","placeholder","alignIcon","className","styles","searchBar","type","onChange","searchBtn","Component","defaultProps","url","App","componentDidMount","a","axios","console","log","showResult","showQuery","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,wBAAwB,UAAY,6BAA6B,YAAc,+BAA+B,UAAY,+B,uKCgB7IC,E,4MACLC,MAAQ,CACPC,YAAa,I,EAQdC,aAAe,SAACC,GACf,IAAMF,EAAcE,EAAEC,OAAOC,MACrBC,EAAU,EAAKC,MAAfD,MAER,EAAKE,SAAS,CACbP,gBAGDK,EAAML,GACN,EAAKQ,aAAaR,I,EAOnBQ,aAAe,SAACR,GACf,IAAIS,EAD2B,EAEI,EAAKH,MAAhCI,EAFuB,EAEvBA,WAFuB,EAEXC,WAETC,SAAQ,SAACC,GAQnB,OAPAJ,EAAcC,EAAWI,QAAO,SAACC,GAAD,OAC/BA,EAAKF,GAAKG,cAAcC,SAASjB,EAAYgB,kBAMvChB,EAAYkB,QAAUT,EAAYS,OACtC,EAAKZ,MAAMa,OAAOV,GAClB,S,4CAIL,WAAU,IAAD,EAC2BW,KAAKd,MAAhCe,EADA,EACAA,YAAaC,EADb,EACaA,UAErB,OACC,sBAAKC,UAAS,UAAKC,IAAOC,UAAZ,YAAyBD,IAAOF,IAA9C,UACC,uBACCI,KAAK,OACLH,UAAWC,IAAOxB,YAClBI,MAAOgB,KAAKrB,MAAMC,YAClBqB,YAAaA,EACbM,SAAUP,KAAKnB,eAEhB,qBAAKsB,UAAWC,IAAOI,UAAvB,SACC,mBAAGL,UAAU,2B,GAzDMM,aA4FxB/B,EAAUgC,aAAe,CACxBT,YAAa,SACbC,UAAW,SAGGxB,Q,iBC9GTiC,EAAM,8DAyCGC,E,4MAtCdjC,MAAQ,CACPgB,KAAM,I,EAGPkB,kB,sBAAoB,4BAAAC,EAAA,+EAEKC,IAAMJ,GAFX,OAEdrB,EAFc,OAIlB,EAAKH,SAAS,CACbQ,KAAK,YAAKL,EAAWK,QALJ,gDAQlBqB,QAAQC,IAAR,MARkB,yD,EAYpBC,WAAa,SAACnB,GACbiB,QAAQC,IAAR,WAAwBlB,I,EAGzBoB,UAAY,SAAClC,GACZ+B,QAAQC,IAAR,UAAuBhC,I,4CAGxB,WACC,OACC,cAAC,EAAD,CACCK,WAAYU,KAAKrB,MAAMgB,KACvBI,OAAQC,KAAKkB,WACbjC,MAAOe,KAAKmB,UACZ5B,WAAY,CAAC,YAAa,WAAY,SAAU,cAChDU,YAAY,YACZC,UAAU,a,GAjCIO,aCMHW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBb,M","file":"static/js/main.6d94758a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"left\":\"SearchBar_left__1km4l\",\"searchBar\":\"SearchBar_searchBar__1hWdk\",\"searchInput\":\"SearchBar_searchInput__3c1Ob\",\"searchBtn\":\"SearchBar_searchBtn__jrPCs\"};","import React, { Component } from \"react\";\nimport styles from \"./SearchBar.module.scss\";\nimport PropTypes from \"prop-types\";\n\n/**\n * Renders a <Searchbar /> component\n * @component\n *\t<Searchbar\n *\t\tsearchData={this.state.data}\n *\t\tresult={this.showResult}\n *\t\tsearchKeys={[\"firstName\", \"lastName\", \"gender\", \"university\"]}\n *\t\tquery={this.showQuery}\n *\t\tplaceholder=\"Search...\"\n *\t\talignIcon=\"left\"\n *\t/>\n */\n\nclass SearchBar extends Component {\n\tstate = {\n\t\tsearchInput: \"\",\n\t};\n\n\t/**\n\t * @function handleChange\n\t * @param {Event} event\n\t * Sets searchInput inside state and the searchInput value is passed to searchResult().\n\t */\n\thandleChange = (e) => {\n\t\tconst searchInput = e.target.value;\n\t\tconst { query } = this.props;\n\n\t\tthis.setState({\n\t\t\tsearchInput,\n\t\t});\n\n\t\tquery(searchInput);\n\t\tthis.searchResult(searchInput);\n\t};\n\n\t/**\n\t * @function searchResult\n\t * @fires props.result\n\t */\n\tsearchResult = (searchInput) => {\n\t\tlet resultArray;\n\t\tconst { searchData, searchKeys } = this.props;\n\n\t\tsearchKeys.forEach((key) => {\n\t\t\tresultArray = searchData.filter((data) =>\n\t\t\t\tdata[key].toLowerCase().includes(searchInput.toLowerCase())\n\t\t\t);\n\n\t\t\t/**\n\t\t\t * Execute callback named result and return it.\n\t\t\t */\n\t\t\treturn searchInput.length && resultArray.length\n\t\t\t\t? this.props.result(resultArray)\n\t\t\t\t: null;\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { placeholder, alignIcon } = this.props;\n\n\t\treturn (\n\t\t\t<div className={`${styles.searchBar} ${styles[alignIcon]}`}>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName={styles.searchInput}\n\t\t\t\t\tvalue={this.state.searchInput}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t/>\n\t\t\t\t<div className={styles.searchBtn}>\n\t\t\t\t\t<i className=\"fas fa-search\"></i>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nSearchBar.propTypes = {\n\t/**\n\t * The searchData type must be an array of objects ( Required ).\n\t */\n\tsearchData: PropTypes.array.isRequired,\n\t/**\n\t * The result type must funciton. It shows the result for the query.\n\t */\n\tresult: PropTypes.func.isRequired,\n\t/**\n\t * The query type must be a function. It shows the user query.\n\t */\n\tquery: PropTypes.func.isRequired,\n\t/**\n\t * The keys on which you want to perform your search.\n\t */\n\tsearchKeys: PropTypes.arrayOf(PropTypes.string),\n\t/**\n\t * The placeholder type must be a string.\n\t */\n\tplaceholder: PropTypes.string,\n\t/**\n\t * The alignIcon type must be a string ( left or right )\n\t * By default is \"right\"\n\t */\n\talignIcon: PropTypes.oneOf([\"left\", \"right\"]),\n};\n\nSearchBar.defaultProps = {\n\tplaceholder: \"Search\",\n\talignIcon: \"right\",\n};\n\nexport default SearchBar;\n","import { Component } from \"react\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\nimport axios from \"axios\";\n\nconst url = \"https://venu-raw.github.io/personsMockData/profileData.json\";\n\nclass App extends Component {\n\tstate = {\n\t\tdata: [],\n\t};\n\n\tcomponentDidMount = async () => {\n\t\ttry {\n\t\t\tlet searchData = await axios(url);\n\n\t\t\tthis.setState({\n\t\t\t\tdata: [...searchData.data],\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\tshowResult = (result) => {\n\t\tconsole.log(`Result: `, result);\n\t};\n\n\tshowQuery = (query) => {\n\t\tconsole.log(`Query: `, query);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<SearchBar\n\t\t\t\tsearchData={this.state.data}\n\t\t\t\tresult={this.showResult}\n\t\t\t\tquery={this.showQuery}\n\t\t\t\tsearchKeys={[\"firstName\", \"lastName\", \"gender\", \"university\"]}\n\t\t\t\tplaceholder=\"Search...\"\n\t\t\t\talignIcon=\"left\"\n\t\t\t/>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}